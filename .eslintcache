[{"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\index.js":"1","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\App.js":"2","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\reportWebVitals.js":"3","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Registration.js":"4","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Login.jsx":"5","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Navbar.js":"6","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\FirstPage.jsx":"7","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Adminnavbar.jsx":"8","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Customer.jsx":"9","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Customernavbar.jsx":"10","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Itemlist.jsx":"11","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Placeorder.jsx":"12","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Showordertable.jsx":"13","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Updateorder.jsx":"14","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Vieworders.jsx":"15","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Vieworderbyadmin.jsx":"16","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Summary.jsx":"17","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Adminlog.jsx":"18","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Adminhomepage.jsx":"19","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Footer.jsx":"20","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\AddItem.jsx":"21","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Admin.jsx":"22","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Pagination.jsx":"23"},{"size":559,"mtime":1612536810536,"results":"24","hashOfConfig":"25"},{"size":2004,"mtime":1613847470064,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":2741,"mtime":1613308039022,"results":"28","hashOfConfig":"25"},{"size":2720,"mtime":1613397826164,"results":"29","hashOfConfig":"25"},{"size":1911,"mtime":1612864142750,"results":"30","hashOfConfig":"25"},{"size":1081,"mtime":1612864223333,"results":"31","hashOfConfig":"25"},{"size":1775,"mtime":1612710087168,"results":"32","hashOfConfig":"25"},{"size":546,"mtime":1613317104639,"results":"33","hashOfConfig":"25"},{"size":1768,"mtime":1613317198791,"results":"34","hashOfConfig":"25"},{"size":2033,"mtime":1613323218281,"results":"35","hashOfConfig":"25"},{"size":4675,"mtime":1613320987636,"results":"36","hashOfConfig":"25"},{"size":2584,"mtime":1613901245582,"results":"37","hashOfConfig":"25"},{"size":3998,"mtime":1613220305799,"results":"38","hashOfConfig":"25"},{"size":1751,"mtime":1613322430927,"results":"39","hashOfConfig":"25"},{"size":8831,"mtime":1614083429871,"results":"40","hashOfConfig":"25"},{"size":2456,"mtime":1613222426507,"results":"41","hashOfConfig":"25"},{"size":2625,"mtime":1613309946250,"results":"42","hashOfConfig":"25"},{"size":4133,"mtime":1614084627427,"results":"43","hashOfConfig":"25"},{"size":254,"mtime":1613309416690,"results":"44","hashOfConfig":"25"},{"size":2105,"mtime":1613312355079,"results":"45","hashOfConfig":"25"},{"size":375,"mtime":1613323254520,"results":"46","hashOfConfig":"25"},{"size":1912,"mtime":1613847658934,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"10vhqie",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"50"},"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\index.js",[],["105","106"],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\App.js",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\reportWebVitals.js",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Registration.js",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Login.jsx",["107"],"import React,{useState} from \"react\";\r\nimport './Loginstyle.css';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport img from \"./logo.png\";\r\n//import Footer from \"./Footer\";\r\n\r\n\r\nconst Login = ()=>{\r\n\r\n\r\n  let history = useHistory();\r\n\r\n  const [username,setUsername] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n\r\n   const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n   \r\n\r\n\r\n   const onSubmit= (e) =>{\r\n    e.preventDefault()\r\n    axios.post(\"http://localhost:3005/login\",{\r\n              \r\n              username : username, \r\n              password : password\r\n              \r\n          }).then((response)=>{\r\n            if(response.data.message!==\"User doesn't exist\")\r\n            console.log(\"successfully logged in\")\r\n  \r\n              if(response.data.message){\r\n                  console.log(response.data.message)\r\n                   setLoginStatus(response.data.message);\r\n                  \r\n              }\r\n              else{\r\n                  console.log(response);\r\n                  console.log(response.data[0].customer_id)\r\n                  history.push(\"/customerhome/\"+response.data[0].customer_id);\r\n                \r\n                }\r\n          });\r\n          \r\n  }\r\n \r\n\r\n\r\n    return(\r\n        <>\r\n        <h2 className=\"h1class \"><b>Customer Login</b></h2>\r\n        <hr/>\r\n        <form onSubmit={(event)=>{onSubmit(event)}}>\r\n<div className=\"div1\">\r\n  <div className=\"container\">\r\n  <div style={{float:\"left\" , width:\"60%\"}}>\r\n    <label htmlFor=\"uname\"><b>Username</b></label>\r\n    <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" required\r\n      onChange={(e)=>{\r\n     setUsername(e.target.value)\r\n }}\r\n          \r\n    />\r\n\r\n    <label htmlFor=\"psw\"><b>Password</b></label>\r\n    <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required\r\n      onChange={(e)=>{\r\n     setPassword(e.target.value)\r\n }}\r\n        \r\n    />\r\n    <br/>\r\n    <div style={{float:\"left\"}}>\r\n    <a href=\"\">Forgot Password</a>\r\n    </div>\r\n    <div style={{float:\"right\"}}>\r\n    <Link to=\"/cregistration\">New Customer</Link>\r\n    </div>\r\n<br/><br/>\r\n    <button className=\"btn btn-info\" type=\"submit\"><b>Login</b></button>\r\n    <br/> <br/>\r\n    <button className=\"btn btn-danger\" type=\"reset\"><b>Cancel</b></button>\r\n    </div>\r\n    <div style={{float:\"right\", width:\"40%\"}}>\r\n    <img src= {img} alt=\"pic2\" className=\"float-right\" style={{marginLeft:\"35px\"}}   width=\"350px\" height=\"350px\"/>\r\n</div>  \r\n  </div>\r\n\r\n  \r\n  </div>\r\n  </form>\r\n  <div style={{marginTop:\"350px\"}}>\r\n  <h2 style={{textAlign:\"center\",marginTop:\"25px\", color:\"red\"}}>{loginStatus}</h2>\r\n  </div> \r\n  \r\n  </>\r\n    )\r\n}\r\n\r\nexport default Login;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Navbar.js",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\FirstPage.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Adminnavbar.jsx",[],["108","109"],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Customer.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Customernavbar.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Itemlist.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Placeorder.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Showordertable.jsx",["110","111"],"import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from './Pagination';\r\n\r\nconst Showordertable = (props) => {\r\n\r\n\r\n  const [itemlist, setItemlist] = useState([]);\r\n\r\n  const customer_id = props.customer_id.customer_id;\r\n  console.log(props)\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(customer_id)\r\n    loadItem(customer_id);\r\n  }, []);\r\n\r\n\r\n  const loadItem = async () => {\r\n    console.log(\"customer id inside load item\")\r\n    console.log(customer_id);\r\n    const result = await Axios.get('http://localhost:3005/loadorder/' + customer_id)\r\n    setItemlist(result.data.reverse());\r\n    console.log(result.data)\r\n  };\r\n\r\n\r\n  //state to show how many post we want to show per page \r\n  const [showPerPage, setShowPerPage] = useState(5);\r\n\r\n\r\n  //state for slice method end and start poing\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  })\r\n\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    console.log(start, end);\r\n    setPagination({ start: start, end: end })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n\r\n      <div className=\"container\">\r\n        <h2 className=\"text-dark text-center mt-5\"><b>ORDER STATUS TABLE</b></h2>\r\n        <hr />\r\n\r\n\r\n        <div className=\"py-4\">\r\n          <table className=\"table border shadow\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Sales Id</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Sales Date</th>\r\n\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                itemlist.slice(pagination.start, pagination.end).map((product) => (\r\n\r\n                  <tr>\r\n\r\n\r\n                    <td>{product.order_id}</td>\r\n                    <td>{product.status}</td>\r\n                    <td>{product.order_date}</td>\r\n\r\n                    <td>\r\n                      <Link className=\"btn btn-outline-success mr-2\" to={`/updateorder/${product.order_id}`}>Update</Link>\r\n                      <Link className=\"btn btn-outline-primary mr-2\" to={`/vieworder/${product.order_id}`}>Reopen</Link>\r\n\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n\r\n        <Pagination\r\n        showPerPage={showPerPage}\r\n        onPaginationChange={onPaginationChange}\r\n        total={itemlist.length} />\r\n      </div>\r\n\r\n\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default Showordertable;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Updateorder.jsx",["112","113","114","115","116"],"import Axios from \"axios\";\r\nimport React, { useState,useEffect } from \"react\";\r\nimport {useHistory,useParams} from \"react-router-dom\";\r\nimport Customernavbar from \"../Customernavbar\";\r\n\r\n\r\n \r\n\r\nconst Updateorder = ()=>{\r\n    \r\n    let history = useHistory();\r\n    const {order_id} = useParams();\r\n    \r\n    const { customer_id } = useParams();\r\n\r\n    const [item_name,setName] = useState(\"\");\r\n    const [quantity,setQuantity] = useState();\r\n    const [location,setLocation] = useState(\"\");\r\n    const [description,setDescription] = useState(\"\");\r\n    const [status,setStatus] = useState(\"\");\r\n    const [order_date,setOrderDate] = useState();\r\n    \r\n\r\nconst [itemlist,setItemlist] = useState([]);          //state to map dropdown items\r\nconst [updatelist,setUpdatelist] = useState([]);      //state to map previous values\r\n\r\n\r\n//for dropdown where data coming from database\r\nuseEffect(()=>{\r\n  loadItem();\r\n},[]);\r\n\r\nconst loadItem = async () =>{\r\n  const result = await Axios.get('http://localhost:3005/getdropdown')\r\n  setItemlist(result.data.reverse());       //use reverse() to bring our data at first pos\r\n};\r\n\r\n\r\n\r\nconst onSubmit= (e)=>{\r\n  e.preventDefault()  \r\n    Axios.post(`http://localhost:3005/updateorder/${order_id}`,{\r\n       \r\n      item_name : item_name,\r\n       quantity : quantity,\r\n       location : location,              //we are sending this obj to backend\r\n       description : description,\r\n       \r\n       order_date : order_date,\r\n       customer_id:customer_id\r\n\r\n     }).then(()=>{\r\n       console.log(\"successful send to backend\");\r\n     });\r\n   history.push(`/customerhome/${customer_id}`);      //redirect to home page\r\n\r\n}\r\n\r\n\r\n\r\n  \r\n   \r\n\r\n\r\n    return(\r\n        <>\r\n        \r\n        <style type=\"text/css\">\r\n      {`.mainnav {display: none}`}\r\n    </style>\r\n        <Customernavbar/>\r\n        <div className=\"container\">\r\n        \r\n        <h2 className=\"text-dark text-center mt-5\"><b>Update Your Order</b></h2>\r\n        <hr/>\r\n\r\n        <div className=\"col-sm-10 mt-5\">\r\n        \r\n        <form onSubmit={(event)=>{onSubmit(event)}}>\r\n        \r\n    \r\n    <div className=\"form-group\">\r\n    <label htmlFor=\"item name\">Select Item</label>\r\n    <select className=\"form-control\" id=\"exampleFormControlSelect1\"\r\n    name=\"item_name\" value={item_name} onChange={(e)=>{\r\n     setName(e.target.value)\r\n }}>\r\n <option value=\"\" disabled defaultValue>Choose Item from the options</option>\r\n {\r\n  itemlist.map((product)=>(\r\n   <option> {product.item_name}</option>\r\n   \r\n   ))}\r\n\r\n    </select>\r\n  </div>\r\n\r\n  <div className=\"form-group\">\r\n    <label>Quantity</label>\r\n    <input type=\"number\" min=\"1\" className=\"form-control\" required id=\"exampleFormControlInput1\" placeholder=\"enter quantity\"\r\n      name=\"quantity\" value={quantity} onChange={(e)=>{\r\n     setQuantity(e.target.value)\r\n }}\r\n    />\r\n  </div>\r\n\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"exampleFormControlSelect1\">Select Location</label>\r\n    <select className=\"form-control\" id=\"exampleFormControlSelect1\"\r\n    name=\"location\" value={location} onChange={(e)=>{\r\n     setLocation(e.target.value)\r\n }}>\r\n      <option value=\"\" disabled defaultValue>Choose Location</option>\r\n      <option>Dewas</option>\r\n      <option>Indore</option>\r\n      <option>Bhopal</option>\r\n      <option>Ujjain</option>\r\n      <option>Jabalpur</option>\r\n      <option>Pune</option>\r\n      <option>Delhi</option>\r\n      <option>Mumbai</option>\r\n      <option>Chennai</option>\r\n    </select>\r\n  </div>\r\n  \r\n  \r\n    <br/>\r\n  <div className=\"form-group\">\r\n    <label for=\"exampleFormControlTextarea1\">Item Description</label>\r\n    <textarea className=\"form-control\" required id=\"exampleFormControlTextarea1\" rows=\"3\"\r\n    name=\"description\" value={description} onChange={(e)=>{\r\n     setDescription(e.target.value)\r\n }}></textarea>\r\n    \r\n  </div>\r\n \r\n\r\n<br/>\r\n<button className=\"btn btn-danger\">Update Order</button>\r\n</form>\r\n        \r\n  </div>\r\n        \r\n</div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Updateorder;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Vieworders.jsx",["117"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport Customernavbar from '../Customernavbar';\r\n\r\nconst Vieworder = () =>{\r\n\r\n    const { order_id } = useParams();\r\n\r\n\r\n      const [showlist,setshowlist] = useState([]);\r\n\r\n    useEffect(() => { \r\n        console.log(order_id);\r\n        loadUser(order_id);\r\n    }, [])\r\n\r\n    const loadUser =  (order_id) => {\r\n        const url=\"http://localhost:3005/vieworder/\"+order_id;\r\n        console.log(url);\r\n        \r\n     axios.get(url).then((response)=>{\r\n         \r\n            setshowlist(response.data)\r\n            console.log(response.data);\r\n            \r\n          });\r\n            \r\n            \r\n        \r\n        \r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n         <style type=\"text/css\">\r\n      {`.mainnav {display: none}`}\r\n    </style>\r\n    <Customernavbar/>\r\n         { <div className=\"container\">\r\n                \r\n                <h1 className=\"display-4\">Order ID : {order_id}</h1>\r\n                <hr />\r\n                {showlist.map((val,key) => (\r\n                <ul className=\"list-group w-100 py-4\">\r\n                    <li className=\"list-group-item\"><b>Item Name : </b>{val.item_name}</li>\r\n                    <li className=\"list-group-item\"><b>Item Quantity : </b>{val.quantity}</li>\r\n                    <li className=\"list-group-item\"><b>Location : </b>{val.location}</li>\r\n                    <li className=\"list-group-item\"><b>Status : </b>{val.status}</li>\r\n                    <li className=\"list-group-item\"><b>Order Description : </b>{val.description}</li>\r\n                </ul>\r\n                ))}\r\n            </div> }\r\n\r\n            \r\n        </> \r\n    )\r\n}\r\n\r\nexport default Vieworder; ","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Vieworderbyadmin.jsx",["118","119","120","121","122"],"import react, { useState, useEffect } from \"react\";\r\nimport Adminnavbar from \"../Adminnavbar\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Vieworderbyadmin = () => {\r\n\r\n    const { order_id } = useParams();\r\n\r\n\r\n    let history = useHistory();\r\n\r\n\r\n\r\n\r\n    const [orderlist, setOrderlist] = useState([]);\r\n\r\n\r\n    //state for approval fields\r\n    const [primary_sale, setPrimary_sale] = useState(\"\");\r\n    const [secondary_sale, setSecondary_sale] = useState(\"\");\r\n    const [unit_price, setUnit_price] = useState();\r\n    const [discount, setDiscount] = useState();\r\n    const [total_price, setTotal_price] = useState();\r\n    const [updated_status, setUpdated_status] = useState(\"Approved\");\r\n\r\n\r\n    const [autoValue,setAutoValue] = useState(0);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(order_id)\r\n        loadUser(order_id);\r\n    }, [])\r\n\r\n    const loadUser = (order_id) => {\r\n        const url = \"http://localhost:3005/adminhome/vieworderbyadmin/\" + order_id;\r\n        console.log(url)\r\n        axios.get(url).\r\n            then((response) => {\r\n                console.log(response.data);\r\n                setOrderlist(response.data);\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    //function on submitting form\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(order_id);\r\n        console.log(primary_sale)\r\n        axios.post(`http://localhost:3005/approveorder/${order_id}`, {\r\n            primary_sale: primary_sale,\r\n            secondary_sale: secondary_sale,\r\n            unit_price: unit_price,\r\n            discount: discount,\r\n            total_price: total_price,\r\n            updated_status: updated_status\r\n\r\n        }).then(() => {\r\n            console.log(\"successful send to backend\");\r\n        });\r\n        history.push(\"/adminhome\");      //redirect to home page\r\n\r\n    }\r\n\r\n    // const totalValue = (e) =>{\r\n\r\n    //     e.preventDefault();\r\n    //     let uprice = document.querySelector('#unit_price').value;\r\n    //     let quant = document.querySelector('#discount').value;\r\n    //     let dis = document.querySelector('#discount').value;\r\n\r\n    //     let tprice = autoValue + (parseInt(quant)*((parseInt(uprice)) * (100-parseInt(dis))/100))\r\n    //     // setAutoValue(tprice);\r\n    //     console.log(tprice);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <style type=\"text/css\">\r\n                {`.mainnav {display: none}`}\r\n            </style>\r\n            <Adminnavbar />\r\n\r\n            \r\n            <div className=\"container\">\r\n                <Link className=\"btn btn-dark\" to=\"/adminhome\">DashBoard</Link>\r\n\r\n                <h3 style={{ fontWeight: \"bold\", marginTop: \"25px\" }}><b>Customer Order</b></h3>\r\n                <div>\r\n                    <h4 className=\"display-4\">Order Id : {order_id}</h4>\r\n                    <hr />\r\n\r\n                    {orderlist.map((val) => (\r\n\r\n                        <ul className=\"list-group w-50 py-4\">\r\n                            <li className=\"list-group-item\"><b>Item Name : </b>{val.item_name}</li>\r\n                            <li className=\"list-group-item\"><b>Customer Location : </b>{val.location}</li>\r\n                            <li className=\"list-group-item\" id=\"quantity\"><b>Item Quantity : </b>{val.quantity}</li>\r\n                            <li className=\"list-group-item\"><b>Item Desscription : </b>{val.description}</li>\r\n                            <li className=\"list-group-item\"><b>Order Status : </b>{val.status}</li>\r\n\r\n\r\n                        </ul>\r\n                    ))}\r\n                </div>\r\n\r\n                <hr />\r\n                <h3 style={{ fontWeight: \"bold\", marginTop: \"25px\", marginBottom: \"25px\" }}><b>For Approver</b></h3>\r\n                <div>\r\n                    <form onSubmit={(event) => { onSubmit(event) }}>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"item name\">Primary Sales Personnel</label>\r\n                                <select className=\"form-control\" id=\"exampleFormControlSelect1\"\r\n                                    name=\"primary_sale\" value={primary_sale} onChange={(e) => {\r\n                                        setPrimary_sale(e.target.value)\r\n                                    }}>\r\n                                    <option value=\"\" disabled defaultValue>Choose Primary Sales Personnel from the options</option>\r\n                                    <option>Shree Packers</option>\r\n                                    <option>P & G</option>\r\n                                    <option>GP Limited</option>\r\n                                    <option>Indore Industries</option>\r\n\r\n\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"item name\">Secondary Sales Personnel</label>\r\n                                <select className=\"form-control\" id=\"exampleFormControlSelect1\"\r\n                                    name=\"secondary_sale\" value={secondary_sale} onChange={(e) => {\r\n                                        setSecondary_sale(e.target.value)\r\n                                    }}>\r\n                                    <option value=\"\" disabled defaultValue>Choose Secondary Sales Personnel from the options</option>\r\n                                    <option>Shree Packers</option>\r\n                                    <option>Bombay Sales</option>\r\n                                    <option>Dewas Deliveries</option>\r\n                                    <option>Indore Sales</option>\r\n                                    <option>ABC Sales</option>\r\n\r\n\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Unit Price</label>\r\n                                <input type=\"number\" min=\"100\" className=\"form-control\" required id=\"unit_price\" placeholder=\"enter unit price\"\r\n                                    name=\"unit_price\" value={unit_price} onChange={(e) => {\r\n                                        setUnit_price(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label>Discount %</label>\r\n                                <input type=\"number\" min=\"0\" step=\"0.01\" id=\"discount\" className=\"form-control\" placeholder=\"enter discount (if any)\"\r\n                                    name=\"discount\" value={discount} onChange={(e) => {\r\n                                        setDiscount(e.target.value)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                        {/* quantity*((unit_price)*(100-discount)/100 */}\r\n                        <div className=\"form-group\">\r\n                            <label>Total Price in ₹</label>\r\n                            <input type=\"number\" min=\"1\" className=\"form-control\" required id=\"total_price\" placeholder=\"₹ total price\"\r\n                                name=\"total_price\" value={total_price} onChange={(e) => {\r\n                                    setTotal_price(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"item name\">Order Status</label>\r\n                            <select className=\"form-control\" id=\"exampleFormControlSelect1\"\r\n                                name=\"updated_status\" value={updated_status} onChange={(e) => {\r\n                                    setUpdated_status(e.target.value)\r\n                                }}>\r\n                                <option value=\"\" disabled defaultValue>Choose Order Status</option>\r\n                                <option>Approved</option>\r\n                                <option>Cancelled</option>\r\n                                <option>Duplicate</option>\r\n                                <option>In Progress</option>\r\n\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <br />\r\n                        <button className=\"btn btn-dark btn-block\">Approve Order</button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Vieworderbyadmin;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Summary.jsx",["123","124","125","126"],"import Adminnavbar from \"../Adminnavbar\";\r\nimport react, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Summary = ()=>{\r\n\r\nconst { order_id } = useParams();\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    console.log(order_id)\r\n    loadUser(order_id);\r\n}, [])\r\n\r\nconst loadUser = (order_id) => {\r\n    const url = \"http://localhost:3005/adminhome/ordersummary/\" + order_id;\r\n    console.log(url)\r\n    axios.get(url).\r\n        then((response) => {\r\n            console.log(response.data);\r\n            setOrderlist(response.data);\r\n        })\r\n\r\n\r\n}\r\n\r\nconst [orderlist, setOrderlist] = useState([]);\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <style type=\"text/css\">\r\n      {`.mainnav {display: none}`}\r\n    </style>\r\n        <Adminnavbar/>\r\n        <div className=\"container\">\r\n        <Link className=\"btn btn-dark\" to=\"/adminhome\">DashBoard</Link>\r\n\r\n\r\n\r\n        <div>\r\n                    <h4 className=\"display-4\">Order Id : {order_id}</h4>\r\n                    <hr />\r\n\r\n                    {orderlist.map((val) => (\r\n                         \r\n                        <ul className=\"list-group list-group-flush w-75 py-4\">\r\n                            <li className=\"list-group-item \"><b>Item Name :  </b>{val.item_name}</li>\r\n                            <li className=\"list-group-item\"><b>Customer Location :  </b>{val.location}</li>\r\n                            <li className=\"list-group-item\"><b>Item Quantity :  </b>{val.quantity}</li>\r\n                            <li className=\"list-group-item\"><b>Item Desscription :  </b>{val.description}</li>\r\n                            <li className=\"list-group-item\"><b>Updated Order Status :  </b>{val.updated_status}</li>\r\n                            <li className=\"list-group-item\"><b>Discount :  </b>{val.discount}%</li>\r\n                            \r\n                            <li className=\"list-group-item\"><b>Entered Total Price of Items : </b>{val.total_price}</li>\r\n                            \r\n                            <li className=\"list-group-item\"><b>Expected Total Price of Items : </b>{val.quantity*((val.unit_price)*(100-val.discount)/100)}</li>\r\n\r\n                            \r\n\r\n\r\n                        </ul>\r\n                        \r\n                    ))}\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Summary;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Adminlog.jsx",["127"],"import React,{ useState }  from 'react';\r\nimport \"./Loginstyle.css\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport img from \"./admin1.jpg\";\r\n\r\n\r\n\r\nconst Adminlog = ()=>{\r\n\r\n\r\n\r\n  let history = useHistory();\r\n\r\n  const [username,setUsername] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n\r\n   const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n\r\nconst onSubmit= (e) =>{\r\n  e.preventDefault()\r\n  axios.post(\"http://localhost:3005/admin\",{\r\n            \r\n            username : username,\r\n            password : password\r\n            \r\n        }).then((response)=>{\r\n          if(response.data.message!==\"User doesn't exist\")\r\n          console.log(\"successfully logged in\")\r\n\r\n            if(response.data.message){\r\n                console.log(response.data.message)\r\n                 setLoginStatus(response.data.message);\r\n                \r\n            }\r\n            else{\r\n                console.log(response);\r\n                \r\n                history.push(\"/adminhome\");\r\n              \r\n              }\r\n        });\r\n        \r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n         <h2 className=\"h1class\"><b>Admin Login</b></h2>\r\n         <hr/>\r\n       <form onSubmit={(event)=>{onSubmit(event)}}>\r\n       <div className=\"div1\">\r\n         <div class=\"container\">\r\n         <div style={{float:\"left\", width:\"60%\"}}>\r\n           <label for=\"uname\"><b>Username</b></label>\r\n           <input type=\"text\" placeholder=\"Enter Username\"  required\r\n             name=\"username\" value={username} onChange={(e)=>{\r\n     setUsername(e.target.value)\r\n }}\r\n           />\r\n       \r\n           <label for=\"psw\"><b>Password</b></label>\r\n           <input type=\"password\" placeholder=\"Enter Password\"  required\r\n             name=\"password\" value={password} onChange={(e)=>{\r\n     setPassword(e.target.value)\r\n }}\r\n           />\r\n           <br/>\r\n           <div style={{float:\"left\"}}>\r\n    <a href=\"\">Forgot Password</a>\r\n    </div>\r\n            <br/><br/>\r\n           <button className=\"btn btn-info\" type=\"submit\"><b>Login</b></button>\r\n           <br/> <br/>\r\n    <button className=\"btn btn-danger\" type=\"reset\"><b>Cancel</b></button>\r\n           \r\n           </div>\r\n         </div>\r\n       <div style={{float:\"right\",width:\"40%\"}}>\r\n       <img src= {img} alt=\"pic3\" className=\"float-right\"  style={{marginTop:\"10px\",marginRight:\"110px\"}} width=\"300px\" height=\"300px\"/>  \r\n       </div>\r\n       \r\n         </div>\r\n         </form> \r\n         <h2 style={{textAlign:\"center\",marginTop:\"350px\",color:\"red\"}}>{loginStatus}</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Adminlog;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Adminhomepage.jsx",["128","129"],"import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport Pagination from './Pagination';\r\n\r\n\r\n\r\nconst Adminhomepage = ()=>{\r\n\r\n    const [customerlist,setCustomerlist] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        loadCustomer();\r\n    },[]);\r\n\r\n    const loadCustomer = async () =>{\r\n        const result = await Axios.get('http://localhost:3005/getcustomer')\r\n        setCustomerlist(result.data.reverse());       //used reverse() to bring our data at first pos\r\n    };\r\n\r\n    const deleteItem = async (order_id)=>{\r\n        await Axios.delete(`http://localhost:3005/deleteorder/${order_id}`).then((response)=>{\r\n            setCustomerlist(customerlist.filter((val)=>{\r\n                console.log(order_id);\r\n              return val.order_id !== order_id\r\n            }))\r\n          })\r\n        loadCustomer();\r\n    }\r\n\r\n\r\n  //state to show how many post we want to show per page \r\n  const [showPerPage, setShowPerPage] = useState(10);\r\n\r\n\r\n  //state for slice method end and start poing\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  })\r\n\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    console.log(start, end);\r\n    setPagination({ start: start, end: end })\r\n  }\r\n\r\n    \r\n  const st = \"in progress\";\r\n\r\n\r\n  const [search,setSearch] = useState('');\r\n  \r\n\r\n    return(\r\n        <>\r\n        \r\n        \r\n        <h2 style={{textAlign:\"center\",fontWeight:\"bold\", marginTop:\"25px\"}}><b>Order list</b></h2>\r\n        <hr/>\r\n        <div className=\"container\">\r\n\r\n        <input type=\"text\" placeholder=\"Search By Customer Name...\" onChange={e =>{\r\n            setSearch(e.target.value);\r\n        }}/>\r\n\r\n\r\n            <div className=\"py-4\">\r\n            <table className=\"table border shadow\">\r\n  <thead className=\"thead-dark\">\r\n    <tr>\r\n      <th scope=\"col\">Order ID</th>\r\n      <th scope=\"col\">Customer Name</th>\r\n      <th scope=\"col\">Item ID</th>\r\n      \r\n      \r\n      \r\n      <th style={{paddingLeft:\"100px\"}}>Action</th>\r\n      <th>Status</th>\r\n      \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {\r\n        customerlist.filter((val)=>{\r\n          if(search === \"\")\r\n          {\r\n            return val;\r\n          }\r\n          else if(val.customer_name.toLowerCase().includes(search.toLowerCase()))\r\n          {\r\n            return val;\r\n          }\r\n        })\r\n        .slice(pagination.start, pagination.end).map((product)=>( \r\n            \r\n\r\n            \r\n            <tr>\r\n          \r\n            \r\n            <td>{product.order_id}</td>\r\n            <td>{product.customer_name}</td>\r\n            <td>{product.item_id}</td>\r\n            \r\n            \r\n            <td>\r\n            <Link className=\"btn btn-outline-primary mr-2\" to={`/adminhome/vieworderbyadmin/${product.order_id}`}>View</Link>\r\n            <Link className=\"btn btn-outline-success mr-2\" to={`/adminhome/summary/${product.order_id}`}>Summary</Link>\r\n              <Link className=\"btn btn-outline-danger \" onClick={\r\n                ()=> deleteItem(product.order_id)\r\n              }>Delete</Link>\r\n            </td>\r\n\r\n              {st && <td style={{backgroundColor:\"greenyellow\"}}>{product.status}</td>}\r\n              {!st && (<td style={{backgroundColor:\"green\"}}>{product.status}</td>)}\r\n            \r\n            {/* {(()=>{\r\n              if(st === \"in progress\"){\r\n            <td id=\"statusid\" style={{paddingRight:\"50px\" , backgroundColor:\"green\"}}>{document.getElementById(\"statusid\").style.color=\"red\"}<b>{product.status}</b></td>\r\n              console.log(st)\r\n              }\r\n              else\r\n              {\r\n            <td id=\"statusid\" style={{paddingRight:\"50px\" , backgroundColor:\"red\"}}><b>{product.status}</b></td>\r\n            }\r\n            })} */}\r\n            \r\n            </tr>\r\n        ))\r\n    }\r\n  </tbody>\r\n</table>\r\n \r\n            </div>\r\n            <Pagination\r\n              showPerPage={showPerPage}\r\n        onPaginationChange={onPaginationChange}\r\n        total={customerlist.length} \r\n            />          \r\n        </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Adminhomepage;","G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Footer.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\AddItem.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Admin.jsx",[],"G:\\ReactProject\\pointofsales\\client\\frontend\\src\\Components\\Pagination.jsx",["130"],"import React, { useEffect, useState } from 'react';\r\n\r\nconst Pagination = ({showPerPage , onPaginationChange, total}) =>{\r\n\r\n    console.log(showPerPage);\r\n\r\n    //state for counter\r\n    const [counter,setCounter] = useState(1);\r\n\r\n    //calculation is based upon button click\r\n    //by clicking next button counter increemented\r\n    //by clicking on previous button counter in decreemented\r\n\r\n    //to detect when the counter changes we use useEffect Hook\r\n    useEffect(()=>{\r\n        const value = showPerPage * counter;\r\n        console.log(\"start value :\", value-showPerPage)\r\n        console.log(\"end value :\",value);\r\n        onPaginationChange(value-showPerPage,value);\r\n    },[counter])\r\n    //above we have make logic that there should be gap of 4 items\r\n    //start : 4-4=0\r\n    //end : 4   so,page visible will be start-end 0-4\r\n\r\n\r\n    //state for restricting black page when limit exceeds\r\n    const onButtonClick = (type) =>{\r\n        if(type===\"prev\")\r\n        {\r\n            if(counter === 1)\r\n            {\r\n                setCounter(1);\r\n            }\r\n            else\r\n            {\r\n                setCounter(counter-1)\r\n            }\r\n        }\r\n        else if(type === \"next\")\r\n        {\r\n            if(Math.ceil(total/showPerPage)===counter)\r\n            {\r\n                setCounter(counter)\r\n            }\r\n            else\r\n            {\r\n                setCounter(counter+1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className=\"d-flex justify-content-between\">\r\n        <button className=\"btn btn-dark\" style={{width:\"100px\"}} onClick={()=> onButtonClick('prev')}>\r\n            Previous\r\n        </button>\r\n\r\n        <button className=\"btn btn-dark\" style={{width:\"100px\"}} onClick={()=> onButtonClick('next')}>\r\n            Next\r\n        </button>\r\n        {console.log(counter)}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Pagination;",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":75,"column":5,"nodeType":"137","endLine":75,"endColumn":16},{"ruleId":"131","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":19,"column":6,"nodeType":"142","endLine":19,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":32,"column":23,"nodeType":"146","messageId":"147","endLine":32,"endColumn":37},{"ruleId":"144","severity":1,"message":"148","line":20,"column":12,"nodeType":"146","messageId":"147","endLine":20,"endColumn":18},{"ruleId":"144","severity":1,"message":"149","line":20,"column":19,"nodeType":"146","messageId":"147","endLine":20,"endColumn":28},{"ruleId":"144","severity":1,"message":"150","line":21,"column":23,"nodeType":"146","messageId":"147","endLine":21,"endColumn":35},{"ruleId":"144","severity":1,"message":"151","line":25,"column":8,"nodeType":"146","messageId":"147","endLine":25,"endColumn":18},{"ruleId":"144","severity":1,"message":"152","line":25,"column":19,"nodeType":"146","messageId":"147","endLine":25,"endColumn":32},{"ruleId":"140","severity":1,"message":"153","line":16,"column":8,"nodeType":"142","endLine":16,"endColumn":10,"suggestions":"154"},{"ruleId":"144","severity":1,"message":"155","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"156","line":29,"column":12,"nodeType":"146","messageId":"147","endLine":29,"endColumn":21},{"ruleId":"144","severity":1,"message":"157","line":29,"column":22,"nodeType":"146","messageId":"147","endLine":29,"endColumn":34},{"ruleId":"140","severity":1,"message":"153","line":37,"column":8,"nodeType":"142","endLine":37,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":42,"column":23,"nodeType":"161","messageId":"162","endLine":42,"endColumn":24,"fix":"163"},{"ruleId":"144","severity":1,"message":"155","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"164","line":3,"column":10,"nodeType":"146","messageId":"147","endLine":3,"endColumn":20},{"ruleId":"140","severity":1,"message":"153","line":16,"column":4,"nodeType":"142","endLine":16,"endColumn":6,"suggestions":"165"},{"ruleId":"159","severity":1,"message":"160","line":21,"column":19,"nodeType":"161","messageId":"162","endLine":21,"endColumn":20,"fix":"166"},{"ruleId":"135","severity":1,"message":"136","line":74,"column":5,"nodeType":"137","endLine":74,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":33,"column":23,"nodeType":"146","messageId":"147","endLine":33,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":85,"column":34,"nodeType":"169","messageId":"170","endLine":85,"endColumn":36},{"ruleId":"140","severity":1,"message":"171","line":20,"column":7,"nodeType":"142","endLine":20,"endColumn":16,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["173"],["174"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'customer_id' and 'loadItem'. Either include them or remove the dependency array.","ArrayExpression",["175"],"no-unused-vars","'setShowPerPage' is assigned a value but never used.","Identifier","unusedVar","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'setOrderDate' is assigned a value but never used.","'updatelist' is assigned a value but never used.","'setUpdatelist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order_id'. Either include it or remove the dependency array.",["176"],"'react' is defined but never used.","'autoValue' is assigned a value but never used.","'setAutoValue' is assigned a value but never used.",["177"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"178","text":"179"},"'useHistory' is defined but never used.",["180"],{"range":"181","text":"182"},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'onPaginationChange' and 'showPerPage'. Either include them or remove the dependency array. If 'onPaginationChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["183"],"no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},[1118,1133],"\r\n            .",{"desc":"186","fix":"189"},[525,536],"\r\n        .",{"desc":"190","fix":"191"},"Update the dependencies array to be: [customer_id, loadItem]",{"range":"192","text":"193"},"Update the dependencies array to be: [order_id]",{"range":"194","text":"195"},{"range":"196","text":"195"},{"range":"197","text":"195"},"Update the dependencies array to be: [counter, onPaginationChange, showPerPage]",{"range":"198","text":"199"},[423,425],"[customer_id, loadItem]",[394,396],"[order_id]",[940,942],[367,369],[685,694],"[counter, onPaginationChange, showPerPage]"]